##spring.security.user.name=kot
##spring.security.user.password=mru

##server.port=${PORT:5000}
##spring.datasource.url=${JDBC_DATABASE_URL}
##spring.datasource.username=${JDBC_DATABASE_USERNAME}
##spring.datasource.password=${JDBC_DATABASE_PASSWORD}

spring.datasource.url=jdbc:postgresql://localhost:5432/Meteo
spring.datasource.username=postgres
spring.datasource.password=mru

# Removes strange clod() error logging
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Actuator config
#
# Expose HTTP REST Endpoint
management.endpoints.web.exposure.exclude=
management.endpoints.web.exposure.include=*
# Detailed health metrics
management.endpoint.health.show-details=always
#
info.app.name = apitest
info.app.groupId = com.test
info.app.artifactId = apitest
info.app.version = 1.0-SNAPSHOT

spring.boot.admin.client.url=https://sbameadow.herokuapp.com/
spring.boot.admin.client.instance.service-base-url=https://bxf.herokuapp.com/

#configs to give secured server info to SBA while registering
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}

#Required for this application to connect to SBA
spring.boot.admin.client.username=kotadmina
spring.boot.admin.client.password=mejwen